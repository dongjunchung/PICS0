{
    "collab_server" : "",
    "contents" : "\n#' @import stats graphics ggplot2 survivalROC\n#' @exportMethod coef predict plot\n\n#' @title Summary of selectGene results\n#'\n#' @description Summary of selectGene results.\n#'\n#' @rdname FitPath-class\n#' @aliases show,FitPath-method\n#'\n#' @param object output of selectPath function\n\nsetMethod(\n  f=\"show\",\n  signature=\"FitPath\",\n  definition=function( object ) {\n\n    path.before <- object@pathAll\n    path.after <- unique(object@pathSelected)\n\n    cat( \"Summary: Pathway-level analysis results (class: FitPath)\\n\" )\n    cat( \"--------------------------------------------------\\n\" )\n    cat( \"Number of all pathways: \", length(path.before), \"\\n\", sep=\"\" )\n    cat( \"Number of selected pathways: \", length(path.after), \"\\n\", sep=\"\" )\n    cat( \"\\n\" )\n    cat( \"List of selected pathways:\\n\" )\n\t\tfor ( i in 1:length(path.after) ) {\n\t\t\tcat( \"\\t\",path.after[i],\":\\n\", sep=\"\" )\n\t\t}\n    cat( \"--------------------------------------------------\\n\" )\n  }\n)\n\n#' @title LASSO coefficient estimates for pathways\n#'\n#' @description LASSO coefficient estimates for pathways.\n#'\n#' @rdname FitPath-class\n#' @aliases coef,FitPath-method\n#'\n#' @param object output of selectPath function\n\nsetMethod(\n  f=\"coef\",\n  signature=\"FitPath\",\n  definition=function( object ) {\n    return(object@coef)\n  }\n)\n\n#' @title Risk group prediction\n#'\n#' @description Risk group prediction.\n#'\n#' @rdname FitPath-class\n#' @aliases predict,FitPath-method\n#'\n#' @param object output of selectPath function\n#' @param newx test gene expression data\n#' @param cuts cut points to determine risk groups\n\nsetMethod(\n  f=\"predict\",\n  signature=\"FitPath\",\n  definition=function( object, newx=NULL, cuts=NULL){\n\n    ##number of pathways\n    if ( is.null(newx) ) {\n      newxlist <- object@fitGene@dataPrefiltered\n    } else {\n      newxlist <- lapply( object@fitGene@dataPrefiltered, function(x){\n        idx<- which( (colnames(newx)%in%colnames(x))==T )\n        newx[,idx]\n      } )\n    }\n    beta<-object@coef\n    w<-object@fitGene@fit$direction\n    genes<-object@fitGene@geneSelected\n\n    pathway<-unique(beta[,1])\n    np<-length(pathway)\n    psrp<-matrix(0,nrow=nrow(newxlist[[1]]),ncol=np)\n\n    for(j in 1:np){\n      betaj<-x<-NULL\n      idx<-which(beta[,1]==pathway[j])\n      betaj<-beta[idx,2]\n      x<-as.matrix(newxlist[[j]])\n      x<-scale(x,T,T)\n\n      ##predict score\n      A<-which(colnames(x)%in%genes[[j]]==T)\n      xA<-as.matrix(x[,A])\n\n      if(is.na(w[j])==T){sc<-xA}\n      if(is.na(w[j])==F){sc<-xA %*% w[[j]]}\n\n      if(ncol(sc)>1){psrp[,j]<-sc %*% betaj}\n      if(ncol(sc)==1){psrp[,j]<-sc*betaj}\n    }\n\n    risk<-apply(psrp,1,function(x){length(which(x>0))})\n\n    if(is.null(cuts)){\n      low<-as.numeric(summary(risk)[2])\n      high<-as.numeric(summary(risk)[5])\n    }\n    if(length(cuts)==2){\n      low<-cuts[1]\n      high<-cuts[2]\n    }\n    riskcat<-ifelse(risk<=low,\"low\",\"med\")\n    riskcat<-ifelse(risk>=high,\"high\",riskcat)\n\n    return(list(\n      risk.index = risk,\n      riskcat = riskcat,\n      cuts=c(low,high),\n      time = object@fitGene@inputdata$time,\n      status = object@fitGene@inputdata$status\n    ))\n  }\n)\n\n#' @title Plotting function\n#'\n#' @description Plot Kaplan-Meier curves (\\code{type=\"KM\"}), ROC (\\code{type=\"ROC\"}, or hazard ratio (\\code{type=\"HR\"}).\n#'\n#' @rdname FitPath-class\n#' @aliases plot,FitPath-method\n#'\n#' @param x output of selectPath function\n#' @param y (unused argument)\n#' @param type type of plot. one of Kaplan-Meier curves (\\code{type=\"KM\"}), ROC (\\code{type=\"ROC\"}, or hazard ratio (\\code{type=\"HR\"}).\n\nsetMethod(\n  f=\"plot\",\n  signature=c(\"FitPath\",\"missing\"),\n  definition=function( x, y, type=\"KM\" ) {\n    if ( type == \"KM\" ) {\n\n      # plot Kaplan-Meier curves\n\n      predicted <- predict(x)\n\n      time<-predicted$time\n      status<-predicted$status\n      reg<-survfit(Surv(time,status)~factor(predicted$riskcat))\n      cuts<-predicted$cuts\n      tab<-table(predicted$riskcat)\n      plot( reg, col=c(\"red\",\"black\",\"green\"),xlim=c(0,60),\n            xlab=\"Months From Diagnosis to Death\",ylab=\"Survival Fraction (KM)\" )\n      legend(\"bottomleft\",lty=c(1,1,1),col=c(\"red\",\"black\",\"green\"),\n             c( paste(\"High\",\">\",cuts[2],\"n=\",tab[1]),paste(\"Medium\", \"n=\",tab[2]),paste(\"Low\",\"<\",cuts[1], \"n=\",tab[3])))\n\n    } else if ( type == \"ROC\" ) {\n\n      # plot time-dependent ROC\n\n      predicted <- predict(x)\n\n      time<-predicted$time\n      status<-predicted$status\n      roc<-survivalROC::survivalROC(Stime=time,status=status,\n        marker<-predicted$risk.index, predict.time=60, method=\"KM\")\n\n\n      plot(roc$FP, roc$TP, type=\"l\", xlim=c(0,1), ylim=c(0,1), col=\"red\",\n           xlab=\"1-Specificity\", ylab=\"Sensitivity\")\n      text(x=0.8, y=0.1, labels = paste(\"AUC =\", round((roc$AUC),3)))\n      abline(0,1)\n\n    } else if ( type == \"HR\" ) {\n\n      # plot hazard ratios of selected pathways\n\n      path.results<-x@coef\n      betas<-path.results[,2]\n      paths<-path.results[,1]\n      index<-coefs<-list()\n      mat<-path.results[betas!=0,]\n      lab2=paths\n      #lab1=gsub( \"KEGG_\", \"\", paths )\n      #lab2=gsub( \"_PATHWAY\", \"\", lab1 )\n\n      for(i in 1:length(paths)){\n        j<-which( mat[,1]==paths[i] )\n        coefs[[i]]<-mat[j,2]\n      }\n\n      names(coefs)<-lab2\n      o<-rev(order(-sapply(coefs,max)))\n      coefs<-coefs[o]\n      lab2<-names(coefs)\n\n      coefs<-unique(coefs)\n      lab2<- unique(lab2)\n      for(i in 1:length(coefs)){\n        if(length(coefs[[i]])>1){\n          index[[i]]<-rev(seq( i-0.1*length(coefs[[i]])+0.1, i , 0.1 ))\n        }\n        if(length(coefs[[i]])==1){index[[i]]<-i}\n      }\n\n      index.plot<- unlist(index)\n      coefs.plot<- exp(unlist(coefs))\n      path.plot<-lab2\n      data.plot<- as.data.frame(cbind(index.plot,coefs.plot))\n\n      ggplot(data.plot,aes(x=index.plot,xend=index.plot,y=1,yend=coefs.plot))+\n        geom_segment()+coord_flip()+\n        scale_x_discrete(limits=path.plot)+\n        ggtitle(\"Hazard ratio\") +\n        theme_bw()+scale_y_continuous(expand = c(0, 0),limits= c(1 , max(data.plot$coefs.plot)+0.05))+\n        theme(axis.title.x=element_blank(),\n              axis.title.y=element_blank(),\n              plot.title =element_text(size=15, vjust=1,hjust=0.5))+\n        theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),\n              panel.background = element_blank(), axis.line = element_line(colour = \"black\"))\n\n    } else {\n      stop(\"Inappropriate 'type' argument!\")\n    }\n  }\n)\n\n",
    "created" : 1488874676184.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4151320668",
    "id" : "C95D68C8",
    "lastKnownWriteTime" : 1488874767,
    "last_content_update" : 1488874767892,
    "path" : "C:/Users/sunze/Desktop/package_0209/v0307/PICS/R/methods_PathFit.R",
    "project_path" : "R/methods_PathFit.R",
    "properties" : {
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}